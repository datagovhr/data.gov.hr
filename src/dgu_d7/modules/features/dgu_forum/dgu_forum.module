<?php
/**
 * @file
 * Code for the DGU Forum feature.
 */

define('FORUM_MODERATION_PERMISSION', 'edit any forum content');

include_once 'dgu_forum.features.inc';

/**
 * Implements hook_menu_breadcrumb_alter().
 */
function dgu_forum_menu_breadcrumb_alter(&$active_trail, $item) {

  // Forum nodes
  if ($item['path'] == 'node/%' && $item['map'][1]->type == 'forum') {
    // Make breadcrumb following this pattern: forum/category/node_title
    $tid = $item['map'][1]->taxonomy_forums[LANGUAGE_NONE][0]['tid'];
    $forum = taxonomy_term_load($tid);
    $active_trail = array(
      current($active_trail),
      array('title' => 'Forum', 'href' => 'forum', 'localized_options' => array()),
      array('title' => 'Categories' , 'href' => 'forum/categories', 'localized_options' => array()),
      array('title' => $forum->name, 'href' => 'forum/' . str_replace(' ', '-', strtolower($forum->name)), 'localized_options' => array()),
    );


  }
  // Forum landing pages
  elseif ($item['path'] == 'forum' || $item['path'] == 'forum/categories' || $item['path'] == 'forum/popular') {
    $active_trail = array(
      current($active_trail),
      array('title' => 'Forum', 'href' => 'forum', 'localized_options' => array())
    );
    switch ($item['path']) {
      case 'forum':
        $active_trail[] = array('title' => 'Forum', 'href' => 'forum', 'localized_options' => array());
        drupal_set_title('Latest forum topics');
        break;
      case 'forum/categories':
        drupal_set_title('Categories');
        break;
      case 'forum/popular':
        drupal_set_title('Most popular topics');
        break;
    }
  }

  // Forum topics within a category
  elseif (isset($item['map'][1]->type) && $item['path'] == 'forum/%') {
    $active_trail = array(
      current($active_trail),
      array('title' => 'Forum', 'href' => 'forum', 'localized_options' => array()),
      array('title' => 'Categories' , 'href' => 'forum/categories', 'localized_options' => array()),
    );
    drupal_set_title($item['map']['1']->title);
  }

}

/**
 * Calculates the number of new posts in a forum that the user has not yet read.
 *
 * Nodes are new if they are newer than NODE_NEW_LIMIT.
 *
 * @param $term
 *   The term ID of the forum.
 *
 * @return
 *   The number of new posts in the forum that have not been read by the user.
 */
function dgu_forum_topics_unread($term) {
  global $user;
  // If not anonymous.
  if($user->uid) {
    $query = db_select('node', 'n');
    $query->join('taxonomy_index', 'ti', 'n.nid = ti.nid AND ti.tid = :tid', array(':tid' => $term));
    $query->leftJoin('history', 'h', 'n.nid = h.nid AND h.uid = :uid', array(':uid' => $user->uid));
    $query->addExpression('COUNT(n.nid)', 'count');
    return $query
      ->condition('status', 1)
      ->condition('n.created', NODE_NEW_LIMIT, '>')
      ->isNull('h.nid')
      ->addTag('node_access')
      ->execute()
      ->fetchField();
  }
}

/**
 * Calculates the number of new replies in a forum that the user has not yet read.
 *
 * Nodes are new if they are newer than NODE_NEW_LIMIT.
 *
 * @param $term
 *   The term ID of the forum.
 *
 * @return
 *   The number of new posts in the forum that have not been read by the user.
 */
function dgu_forum_replies_unread($term) {
  global $user;

  // If not anonymous.
  if($user->uid) {
    $query = db_select('node', 'n');
    $query->join('taxonomy_index', 'ti', 'n.nid = ti.nid AND ti.tid = :tid', array(':tid' => $term));
    $query->join('reply', 'r', 'n.nid = r.entity_id');
    $query->leftJoin('history', 'h', 'n.nid = h.nid AND h.uid = :uid', array(':uid' => $user->uid));
    $query->addExpression('COUNT(r.id)', 'count');
    $query->condition('n.status', 1)
      ->condition('r.status', 1)
      ->condition('n.created', NODE_NEW_LIMIT, '>')
      ->condition(db_or()->where('r.created > h.timestamp')->isNull('h.timestamp'))
      ->addTag('node_access');
    $result = $query->execute();
    return $result->fetchField();
  }
}

function dgu_forum_dgu_moderation_moderator_permission(&$node) {
  if ($node->type == 'forum') {
    return user_access(FORUM_MODERATION_PERMISSION);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dgu_forum_form_forum_node_form_alter(&$form, &$form_state, $form_id) {

  drupal_set_title(t('Create forum topic'));
  unset($form['actions']['preview']);
  $form['#attributes']['class'][] = "boxed";

  if (!user_access(FORUM_MODERATION_PERMISSION)) {
    dgu_moderation_node_forms_alter($form);
  }
  else {
    $form['#after_build'][] = 'dgu_moderation_node_forms_after_build';
  }
}

function dgu_forum_node_access($node, $op, $account) {
  if ($op != 'create' && is_object($node) && $node->type == 'forum') {
    return dgu_moderation_access($account, $node, FORUM_MODERATION_PERMISSION);
  }
}

function dgu_forum_node_access_records($node) {
  if (($node->type == 'forum')) {
    return dgu_moderation_get_node_grants($node);
  }
}

function dgu_forum_node_grants($account, $op) {
  return dgu_moderation_get_account_grants($account, FORUM_MODERATION_PERMISSION);
}

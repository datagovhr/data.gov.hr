<?php
/**
 * @file
 * Drupal needs this blank file.
 */

define('APP_MODERATION_PERMISSION', 'edit any app content');

include_once 'dgu_app.features.inc';

/**
 * Implements hook_menu_breadcrumb_alter().
 */
function dgu_app_menu_breadcrumb_alter(&$active_trail, $item) {
  if ($item['path'] == 'apps') {
    $active_trail = array(
      current($active_trail),
      array('title' => t('Apps'), 'href' => 'apps', 'localized_options' => array()),
      array('title' => t('Apps'), 'href' => 'apps', 'localized_options' => array()),
    );
    drupal_set_title(t('Latest apps'));
  }
  elseif ($item['path'] == 'apps/top') {
    $active_trail = array(
      current($active_trail),
      array('title' => t('Apps'), 'href' => 'apps', 'localized_options' => array())
    );
    drupal_set_title(t('Top rated'));
  }
  elseif ($item['path'] == 'apps/all') {
    $active_trail = array(
      current($active_trail),
      array('title' => t('Apps'), 'href' => 'apps', 'localized_options' => array())
    );
    drupal_set_title(t('All apps'));
  }
  if (isset($item['map'][1]->type) && $item['map'][1]->type == 'app') {
    $active_trail[2] = $active_trail[1];
    $active_trail[1] = array('title' => t('Apps'), 'href' => 'apps', 'localized_options' => array());
  }
}

function dgu_app_dgu_moderation_moderator_permission(&$node) {
  if ($node->type == 'app') {
    return user_access(APP_MODERATION_PERMISSION);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dgu_app_form_app_node_form_alter(&$form, &$form_state, $form_id) {

  drupal_set_title(t('Submit an app'));
  unset($form['actions']['preview']);
  $form['#attributes']['class'][] = "boxed";

  if (!user_access(APP_MODERATION_PERMISSION)) {
    dgu_moderation_node_forms_alter($form);
  }
  else {
    $form['#after_build'][] = 'dgu_moderation_node_forms_after_build';
  }
}

function dgu_app_node_access($node, $op, $account) {
  if ($op != 'create' && is_object($node) && $node->type == 'forum') {
    return dgu_moderation_access($account, $node, APP_MODERATION_PERMISSION);
  }
}

function dgu_app_node_access_records($node) {
  if (($node->type == 'app')) {
    return dgu_moderation_get_node_grants($node);
  }
}

function dgu_app_node_grants($account, $op) {
  return dgu_moderation_get_account_grants($account, APP_MODERATION_PERMISSION);
}

function dgu_app_preprocess_node(&$variables) {
  if ($variables['type'] == 'app'){
    if ($variables['view_mode'] == 'search_result'){
      $variables['directory'] = 'profile/dgu/themes/custom/dguk/templates/';
      $variables['classes_array'] = array("node", "node-app-searchresult");
      $variables['submitted'] = 'Submitted on ' . $variables['date'];
      if ($variables['created'] != $variables['changed']) {
        $variables['updated'] = 'Updated on ' . format_date($variables['changed']);
      }

    }
  }
}
